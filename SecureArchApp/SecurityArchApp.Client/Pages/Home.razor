@page "/"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration
@using System.Net.Http.Json

<PageTitle>Home</PageTitle>

<MudPaper Class="pa-6 mx-auto mt-12" Style="max-width: 480px;" Elevation="6" Rounded="true">
    @if (_loading)
    {
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" Class="mx-auto mb-4" />
        <MudText Align="Align.Center" Typo="Typo.subtitle1">Lade Benutzerdaten...</MudText>
    }
    else if (_username is null)
    {
        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Error" GutterBottom="true">
            Benutzer nicht gefunden.
        </MudText>
        <MudText Align="Align.Center" Class="mb-6">
            Bitte <MudLink Href="/login" Color="Color.Primary">einloggen</MudLink>.
        </MudText>
    }
    else
    {
        <MudText Typo="Typo.h4" GutterBottom="true" Align="Align.Center" Color="Color.Primary">
            Hallo, @_username!
        </MudText>
        <MudText Typo="Typo.subtitle1" Align="Align.Center" Class="mb-6" Color="Color.Primary">
            Willkommen bei SecureArch
        </MudText>

        <MudStack Direction="Row" Spacing="6" Class="mb-6">
            <MudLink Href="/admin" Color="Color.Primary" Class="d-flex align-center" Style="text-decoration:none;">
                <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" Size="Size.Large" Class="me-1" />
                <span>Admin</span>
            </MudLink>

            <MudLink Href="@_ticketServiceUrl" Color="Color.Primary" Target="_blank" Rel="noopener noreferrer" Class="d-flex align-center" Style="text-decoration:none;">
                <MudIcon Icon="@Icons.Material.Filled.ConfirmationNumber" Size="Size.Large" Class="me-1" />
                <span>Ticket Service</span>
            </MudLink>
        </MudStack>

        <MudButton Variant="Variant.Filled" Color="Color.Error" FullWidth="true" OnClick="Logout" StartIcon="@Icons.Material.Filled.ExitToApp">
            Logout
        </MudButton>
    }
    </MudPaper>

    @code {
    private string? _username;
    private string? _ticketServiceUrl;
    private bool _loading = true;
    private bool _hasLoaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_hasLoaded)
        {
            _hasLoaded = true;

            // Konfigurationswerte laden
            _ticketServiceUrl = Configuration["TicketServiceUrl"];

            await LoadUserInfo();
            StateHasChanged();
        }
    }

    private async Task LoadUserInfo()
    {
        try
        {
            var userInfo = await Http.GetFromJsonAsync<UserInfo>("CoreService/me");
            if (userInfo == null)
            {
                NavigationManager.NavigateTo("/login", true);
                return;
            }

            _username = userInfo.Username;
        }
        catch (HttpRequestException ex)
        {
            if (ex.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                NavigationManager.NavigateTo("/login", true);
                return;
            }
        }
        finally
        {
            _loading = false;
        }
    }

    private void Logout()
    {
        NavigationManager.NavigateTo("/logout", true);
    }

    public class UserInfo
    {
        public string Username { get; set; } = "";
        public KundeDto Kunde { get; set; } = new();
    }

    public class KundeDto
    {
        public int kunden_id { get; set; }
        public string kunden_name { get; set; } = "";
    }
}

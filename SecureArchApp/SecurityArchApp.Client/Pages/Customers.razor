@page "/customers"
@inject HttpClient Http

@using SecurityArch.Models
@using SecureArchApp


<PageTitle>Kunden</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Kunden</MudText>
<MudText Typo="Typo.body1" Class="mb-8">Übersicht der aktiven Kunden.</MudText>

<MudPaper Class="p-4">
    

    @if (customers == null)
    {
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
    }
    else
    {
        <MudTable Items="customers" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>id</MudTh>
                <MudTh>Vorname</MudTh>
                <MudTh>Nachname</MudTh>
                <MudTh>Email</MudTh>
                <MudTh>Telefon</MudTh>
                <MudTh>Adresse</MudTh>
                <MudTh>Erstellt</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="ID">@context.id</MudTd>
                <MudTd DataLabel="Vorname">@context.vorname</MudTd>
                <MudTd DataLabel="Nachname">@context.nachname</MudTd>
                <MudTd DataLabel="Email">@context.email</MudTd>
                <MudTd DataLabel="Telefon">@context.telefon</MudTd>
                <MudTd DataLabel="Adresse">@context.adresse</MudTd>
                <MudTd DataLabel="Erstellt">@context.erstellt_am.ToString("dd.MM.yyyy HH:mm")</MudTd>
            </RowTemplate>
        </MudTable>
    }
    </MudPaper>

    @code {

    private List<Customer>? customers;
    

    protected override async Task OnInitializedAsync()

    {
        
        try
        {
            customers = await Http.GetFromJsonAsync<List<Customer>>("https://localhost:7254/CoreService/GetCustomers");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Fehler beim Laden der Kunden: {ex.Message}");
        }
    }
}

@page "/login"
@inject HttpClient Http
@inject NavigationManager Nav

<MudPaper Class="d-flex justify-center align-center" Style="height: 100vh">
    <MudCard Style="width: 400px;" Elevation="4" Class="pa-6">
        <MudCardContent>
            <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Login</MudText>

            <MudTextField Label="Username" @bind-Value="Username" Variant="Variant.Filled" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Person" />
            <MudTextField Label="Password" @bind-Value="Password" Variant="Variant.Filled" InputType="InputType.Password" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Lock" Class="mt-3" />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Login" Class="mt-5" FullWidth="true">Login</MudButton>

            <MudText Typo="Typo.body2" Color="Color.Error" Class="mt-4 text-center">@Message</MudText>
        </MudCardContent>
    </MudCard>
</MudPaper>

<p>@Message</p>

@code {
    string Username = "";
    string Password = "";
    string Message = "";
    string returnUrl = "/";

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(Nav.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (query.TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }

        try
        {
            // Einfach die API aufrufen — der Cookie wird automatisch mitgesendet
            var userResponse = await Http.GetAsync("CoreService/me");
            if (userResponse.IsSuccessStatusCode)
            {
                Nav.NavigateTo(returnUrl, true);
            }
            else if (userResponse.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                // Kein gültiger User, bleib auf Login
            }
        }
        catch
        {
            // Ignoriere Fehler und zeige Login
        }
    }

    async Task Login()
    {
        Message = "";
        var loginRequest = new { Username, Password };

        var response = await Http.PostAsJsonAsync("https://localhost:7254/CoreService/login", loginRequest);
        if (response.IsSuccessStatusCode)
        {
            Message = "Login erfolgreich!";
            Nav.NavigateTo(returnUrl, true);
        }
        else
        {
            Message = "Login fehlgeschlagen";
        }
    }
}
